d
head(d)
tail(d)
names <- d[4, ]
d <- d[5:124, ]
names
head(d)
tail(d)
?which
grep("^START", d[, 4])
require(XML)
url <- "http://mac50k.org/course/50kdesc_2014.htm"
tables <- readHTMLTable(url)
nRows <- unlist(lapply(tables, function(t) dim(t)[1]))
d <- tables[[which.max(nRows)]]
head(d)
tail(d)
names <- d[4, ]
names(d) <- d[4, ]
head(d)
require(XML)
url <- "http://mac50k.org/course/50kdesc_2014.htm"
tables <- readHTMLTable(url)
nRows <- unlist(lapply(tables, function(t) dim(t)[1]))
d <- tables[[which.max(nRows)]]
head(d)
tail(d)
head(d)
require(XML)
url <- "http://mac50k.org/course/50kdesc_2014.htm"
tables <- readHTMLTable(url)
head(tables[[1]])
head(tables[[2]])
d <- tables[[2]]
head(d)
tail(d)
names(d) <- d[4, ]
head(d)
d <- tables[[2]]
head(d)
names(d) <- d[2, ]
head(d)
d <- tables[[2]]
head(d)
ncols(d)
ncol(d)
lineStart <- grep("^START", d[, 4])
lineStart
lineFinish <- grep("^FINISH", d[, 4])
d <- d[lineStart:lineFinish, ]
head(d)
d <- tables[[2]]
d[2, ]
?readHTMLTable
tables <- readHTMLTable(url, header=FALSE)
d <- tables[[2]]
head(d)
names(d) <- d[2, ]
head(d)
tables <- readHTMLTable(url)
d <- tables[[2]]
names(d) <- d[3, ]
head(d)
d[3, ]
d[2, ]
names <- d[2, ]
names
names(d) <- names
head(d)
names(d)
?names
names
is.character(names)
names <- as.character(d[2, ])
names(d)
as.character(d[2, ])
d[2, ]
length(names)
names[1]
names <- d[2, ]
names[1]
names(d) <- NULL
names(d)
head(d)
names(d) <- names
head(d)
names
d <- tables[[2]]
head(d)
names <- c("mile", "mi2nxt", "elevation", "directions", "filler1", "filler2")
lineStart <- grep("^START", d[, 4])
lineFinish <- grep("^FINISH", d[, 4])
d <- d[lineStart:lineFinish, ]
head(d)
names(d) <- c("mile", "mi2nxt", "elevation", "directions", "filler1", "filler2")
head(d)
names(d) <- c("mile", "mi2nxt", "elevation", "directions", "mi2aid", "filler2")
lineStart <- grep("^START", d[, 4])
lineFinish <- grep("^FINISH", d[, 4])
d <- d[lineStart:lineFinish, ]
head(d)
tail(d)
d$isAid <- grepl("Aid Station", d$directions)
table(d$isAid)
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line()
View(d)
str(d)
d$mile <- as.numeric(d$mile)
d$mi2nxt <- as.numeric(d$mi2nxt)
d$elevation <- as.numeric(d$elevation)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line()
View(d)
require(XML)
url <- "http://mac50k.org/course/50kdesc_2014.htm"
tables <- readHTMLTable(url, header=FALSE)
d <- tables[[2]]
head(d)
tail(d)
names(d) <- c("mile", "mi2nxt", "elevation", "directions", "mi2aid", "filler2")
lineStart <- grep("^START", d[, 4])
lineFinish <- grep("^FINISH", d[, 4])
d <- d[lineStart:lineFinish, ]
head(d)
tail(d)
mile <- unclass(d$mile)
head(data.frame(mile, d$mile))
mile <- as.numeric(d$mile)
head(data.frame(mile, d$mile))
classes <- c(rep("numeric", 3))
tables <- readHTMLTable(url, header=FALSE, colClasses=classes, which=2)
head(d)
d <- readHTMLTable(url, header=FALSE, colClasses=classes, which=2)
head(d)
classes <- c(rep("numeric", 3), rep("character", 3))
d <- readHTMLTable(url, header=FALSE, colClasses=classes, which=2)
head(d)
tail(d)
names(d) <- c("mile", "mi2nxt", "elevation", "directions", "mi2aid", "filler2")
lineStart <- grep("^START", d[, 4])
lineFinish <- grep("^FINISH", d[, 4])
d <- d[lineStart:lineFinish, ]
head(d)
tail(d)
d$isAid <- grepl("Aid Station", d$directions)
table(d$isAid)
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line()
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_smooth()
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation, color=isAid)) +
geom_line() +
geom_point()
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point(color=d$isAid)
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point()
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point(aes(color=isAid))
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point(aes(size=isAid))
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point(aes(size=isAid)) +
theme(legend.position="none")
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point(aes(size=isAid)) +
labs(title="McDonald Forest 50K elevation chart")
theme(legend.position="none")
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point(aes(size=isAid)) +
labs(title="McDonald Forest 50K elevation chart") +
theme(legend.position="none")
path <- file.path("E:", "EX12-03_C-TraIn", "Analytic")
f <- file.path(path, "Analysis.csv")
ds <- read.table(f, sep=",", na.strings="", header=TRUE)
names(ds)
path <- file.path("E:", "EX12-03_C-TraIn", "Analytic")
f <- file.path(path, "Analysis.csv")
ds <- read.table(f, sep=",", na.strings="", header=TRUE)
?read.table
ds <- read.table(f, sep=",", na.strings="", header=TRUE, fill=TRUE)
names(ds)
ds$first_appt_afterdischrg <- as.character(ds$first_appt_afterdischrg)
ds$first_appt_afterdischrg
ds <- read.table(f, sep=",", na.strings="", header=TRUE, quote="")
ds <- read.table(f, sep=",", na.strings="", header=TRUE, quote="", fill=TRUE)
ds$first_appt_afterdischrg <- as.character(ds$first_appt_afterdischrg)
ds$first_appt_afterdischrg
table(ds$first_appt_afterdischrg)
table(ds$first_appt_afterdischrg)
levels$ds$randomization
levels(ds$randomization)
path <- file.path("E:", "EX12-03_C-TraIn", "Analytic")
f <- file.path(path, "Analysis.csv")
ds <- read.table(f, sep=",", na.strings="", header=TRUE, quote="", fill=TRUE)
levels(ds$first_appt_afterdischrg)
ds$first_appt_afterdischrg <- as.character(ds$first_appt_afterdischrg)
possibilities <- c("1", "1 week", "1 WEEK", "1 WK", "2", "2 days", "3", "3 days", "3 DAYS", "4", "4 days", "4 DAYS", "5", "5-7", "5 DAYS", "6", "7", "7 days", "7 DAYS", "A FEW", "next day or week after")
ds$isSawPCPWithin7Days <- ds$first_appt_afterdischrg %in% possibilities
table(ds$first_appt_afterdischrg, ds$isSawPCPWithin7Days)
table(ds$first_appt_afterdischrg[ds$isSawPCPWithin7Days, ])
table(ds$first_appt_afterdischrg[ds$isSawPCPWithin7Days])
table(ds$first_appt_afterdischrg[!ds$isSawPCPWithin7Days])
ds$first_appt_afterdischrg <- as.character(ds$first_appt_afterdischrg)
possibilities <- c("1", "1 week", "1 WEEK", "1 WK", "2", "2 days", "3", "3 days", "3 DAYS", "4", "4 days", "4 DAYS", "5", "5-7", "5 DAYS", "6", "7", "7 days", "7 DAYS", "A FEW", "next day or week after")
ds$isSawPCPWithin7Days <- ds$first_appt_afterdischrg %in% possibilities
table(ds$first_appt_afterdischrg[ds$isSawPCPWithin7Days])
table(ds$first_appt_afterdischrg[!ds$isSawPCPWithin7Days])
table(ds$first_appt_afterdischrg[ds$isSawPCPWithin7Days])
table(ds$first_appt_afterdischrg[!ds$isSawPCPWithin7Days])
table(ds$isSawPCPWithin7Days[ds$intervention])
table(ds$isSawPCPWithin7Days[ds$intervention == 1])
table(ds$intervention)
names(ds)
table(ds$isSawPCPWithin7Days[ds$Intervention == 1])
table(ds$isSawPCPWithin7Days[ds$randomization == "Intervention"])
table(ds$isSawPCPWithin7Days, ds$randomization)
t <- table(ds$isSawPCPWithin7Days, ds$randomization)
t
prop.table(t, margin=2)
addmargins(t)
addmargins(prop.table(t, margin=2))
t <- sprintf("%.1f%%, (%.d)", prop.table(t, margin=2) * 100, t)
t
t <- matrix(t, dim=c(2, 2))
?matrix
t <- matrix(t, nrow=2, ncol=2)
t
?data.frame
t <- table(ds$isSawPCPWithin7Days, ds$randomization)
t <- sprintf("%.1f%%, (%.d)", prop.table(t, margin=2) * 100, t)
t <- matrix(t, nrow=2, ncol=2)
t <- data.frame(t, row.names=c("Did not see PCP within 7 days", "Saw PCP within 7 days"))
names(t) <- levels(ds$randomization)
t
t <- table(ds$isSawPCPWithin7Days, ds$randomization)
t
names(ds)
makeTable <- function (x, labels) {
t <- table(x, ds$randomization)
t <- sprintf("%.1f%% (%.d)", prop.table(t, margin=2) * 100, t)
t <- matrix(t, nrow=2, ncol=2)
t <- data.frame(t, row.names=labels)
names(t) <- levels(ds$randomization)
t
}
makeTable(ds$isSawPCPWithin7Days, c("No", "Saw PCP within 7 days"))
makeTable(ds$RxConsult, c("No", "EPIC PTA (Prior to Admission) med list and chart reviewed"))
makeTable(ds$HomeVisit, c("No", "Home visit, post-discharge?"))
makeTable(ds$PhoneCall, c("No", "Number of phone calls (0, 1, 2+)"))
table(ds$PhoneCall)
makeTable(ds$PhoneCall > 0, c("No", "Number of phone calls (0, 1, 2+)"))
makeTable(ds$isSawPCPWithin7Days, c("No", "Saw PCP within 7 days"))
makeTable(ds$RxConsult, c("No", "EPIC PTA (Prior to Admission) med list and chart reviewed"))
makeTable(ds$HomeVisit, c("No", "Home visit, post-discharge"))
makeTable(ds$PhoneCall > 0, c("No", "Number of phone calls > 0"))
?as.Date
dateCutoff <- as.Date("2013-12-31", format="%Y-%m-%d")
format(dateCutoff, "%m-%d-%Y")
as.numeric(dateCutoff)
?nrows
?nrow
?round
?file.info
?message
require(xlsx)
url <- "http://www.ohsu.edu/xd/outreach/oregon-rural-health/data/rural-definitions/upload/OR-Zip-Codes-Urban-Rural-Designations.xlsx"
dfUrbanRural <- read.xlsx(url)
dfUrbanRural <- read.xlsx(url, sheet=1)
?read.xlsx
dfUrbanRural <- read.xlsx(url, 1)
getwd()
url <- "http://www.ohsu.edu/xd/outreach/oregon-rural-health/data/rural-definitions/upload/OR-Zip-Codes-Urban-Rural-Designations.xlsx"
f <- file.path(getwd(), "OR-Zip-Codes-Urban-Rural-Designations.xlsx")
download.file(url, f, mode="wb")
dfUrbanRural <- read.xlsx(url, 1)
dfUrbanRural <- read.xlsx(f, 1)
packages <- c("data.table", "sqldf")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
setInternet2(TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
agricultureLogical <- dt$ACR == 3 & dt$AGS == 6
which(agricultureLogical)
which(agricultureLogical)[1:3]
packages <- c("data.table", "jpeg")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
install.packages("jpeg")
packages <- c("data.table", "jpeg")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
?jpeg
??jpeg
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
img <- readJPEG(url, native=TRUE)
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
img <- readJPEG(url, native=TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
f <- file.path(getwd(), "jeff.jpg")
download.file(url, f)
img <- readJPEG(f, native=TRUE)
setwd("~/Repositories/Coursera/GettingAndCleaningData/Quiz3")
setwd("~/Repositories/Coursera/GettingAndCleaningData/Quiz3")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
f <- file.path(getwd(), "jeff.jpg")
download.file(url, f)
img <- readJPEG(f, native=TRUE)
quantile(img, probs=c(0.30, 0.80))
quantile(img, probs=c(0, 0.30, 0.80, 1))
summary(img)
names(img)
?download.file
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
f <- file.path(getwd(), "jeff.jpg")
download.file(url, f, mode="wb")
img <- readJPEG(f, native=TRUE)
quantile(img, probs=c(0.3, 0.8))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
names(dtGDP)
names(dtEd)
View(dtGDP)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip=4))
View(dtGDP)
?read.csv
View(dtGDP)
dtGDP <- data.table(read.csv(f, skip=3, header=TRUE))
View(dtGDP)
dtGDP <- data.table(read.csv(f, skip=3, header=TRUE, fill=TRUE, strip.white=TRUE))
View(dtGDP)
View(dtGDP)
dtGDP <- dtGDP[c(1, 2, 4, 5)]
View(dtGDP)
dtGDP <- data.table(read.csv(f, skip=3, header=TRUE, fill=TRUE, strip.white=TRUE))
dtGDP <- dtGDP[, c(1, 2, 4, 5)]
dtGDP <- data.table(read.csv(f, skip=4, header=TRUE, fill=TRUE, strip.white=TRUE))
names(dfGDP)
names(dtGDP)
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
View(dtGDP)
dtGDP <- data.table(read.csv(f, skip=4, nrows=231))
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
View(dtGDP)
View(dtGDP)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
dtEd <- data.table(read.csv(f))
View(dtEd)
names(dtEd)
View(dtGDP)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip=4, nrows=231))
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("ContryCode", "rankingGDP", "Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all=TRUE, by="CountryCode")
dt <- merge(dtGDP, dtEd, all=TRUE, by=c(CountryCode))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip=4, nrows=231))
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all=TRUE, by=c(CountryCode))
names(dtGDP)
names(dtEd)
dt <- merge(dtGDP, dtEd, all=TRUE, by=c("CountryCode"))
dt
dt[order(rankingGDP)][13]
dt[order(rankingGDP), list(CountryCode, Long.Name, rankingGDP, gdp)][13]
names(dt)
dt[order(rankingGDP), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
dt[order(rankingGDP), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp, decreasing=TRUE)][13]
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
dt[order(rankingGDP, decreasing=TRUE), list(row.name, CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)]
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
df <- dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)]
View(df)
dt <- merge(dtGDP, dtEd, by=c("CountryCode"))
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
sum(is.na(dt$rankingGDP))
sum(!is.na(dt$rankingGDP))
dt <- merge(dtGDP, dtEd, all=TRUE, by=c("CountryCode"))
sum(!is.na(dt$rankingGDP))
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
View(dt)
sum(!is.na(unique(dt$rankingGDP)))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip=4, nrows=231))
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all=TRUE, by=c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
names(dt)
dt[, mean(rankingGDP), by=Income.Group]
dt[, rankingGDP, by=Income.Group]
dt[, mean(rankingGDP, na.rm=TRUE), by=Income.Group]
dt <- merge(dtGDP, dtEd, by=c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt <- merge(dtGDP, dtEd, all=TRUE, by=c("CountryCode"))
View(dt)
View(dtGDP)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
dtGDP <- data.table(read.csv(f, skip=4))
dtGDP <- dtGDP[X != ""]
View(dtGDP)
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all=TRUE, by=c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
rm(df)
View(dt)
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
dt <- merge(dtGDP, dtEd, all=TRUE, by=c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip=4))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all=TRUE, by=c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
dtGDP <- data.table(read.csv(f, skip=4, nrows=439))
View(dtGDP)
dtGDP <- data.table(read.csv(f, skip=4, nrows=215))
View(dtGDP)
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all=TRUE, by=c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
dt[, mean(rankingGDP, na.rm=TRUE), by=Income.Group]
dt$quantileGDP <- quantile(dt$rankingGDP, probs=seq(0, 1, 0.2))
dt$quantileGDP <- quantile(dt$rankingGDP, probs=seq(0, 1, 0.2), na.rm=TRUE)
?quantile
dt[, .N, by=quantileGDP]
dt[, .N, by=c("Income.Group", "quantileGDP"]
dt[, .N, by=c("Income.Group", "quantileGDP")]
View(dt)
cut <- quantile(dt$rankingGDP, probs=seq(0, 1, 0.2), na.rm=TRUE)
cut
dt$quantileGDP <- cut(dt$rankingGDP, cut=cut)
breaks <- quantile(dt$rankingGDP, probs=seq(0, 1, 0.2), na.rm=TRUE)
dt$quantileGDP <- cut(dt$rankingGDP, breaks=breaks)
dt[, .N, by="quantileGDP"]
dt[Income.Group == "Lower middle income", .N, by="quantileGDP"]
dt[Income.Group == "Lower middle income", .N, by=c("Income.Group", "quantileGDP"]
dt[Income.Group == "Lower middle income", .N, by=c("Income.Group", "quantileGDP")]
