setnames(aggTotalTop, names(aggTotalTop)[1:5], paste0(names(aggTotalTop)[1:5], "Top"))
aggTotalTop <- cbind(cohort="Total", aggTotalTop)
df0ACohort <- cbind(aggCohortAll, subset(aggCohortTop, select=-c(cohort)))
df0ATotal  <- cbind(aggTotalAll,  subset(aggTotalTop , select=-c(cohort)))
df0A <- rbind(df0ACohort, df0ATotal)
df0A
df0A$nAll <- format(df0A$nAll, big.mark=",", scientific=FALSE)
df0A$spendAll <- format(df0A$spendAll, big.mark=",", scientific=FALSE)
df0A$spendTop <- format(df0A$spendTop, big.mark=",", scientific=FALSE)
df0A
df0A$nAll <- format(df0A$nAll, big.mark=",", scientific=FALSE)
df0A$nTop <- format(df0A$nTop, big.mark=",", scientific=FALSE)
df0A$pctAll <- sprintf("%.1f", df0A$pctAll)
df0A$pctTop <- sprintf("%.1f", df0A$pctTop)
df0A$mmAll <- format(df0A$mmAll, big.mark=",", scientific=FALSE)
df0A$mmTop <- format(df0A$mmTop, big.mark=",", scientific=FALSE)
df0A$spendAll <- format(df0A$spendAll, big.mark=",", scientific=FALSE)
df0A$spendTop <- format(df0A$spendTop, big.mark=",", scientific=FALSE)
df0A$pmpmAll <- sprintf("%.2f", df0A$pmpmAll)
df0A$pmpmTop <- sprintf("%.2f", df0A$pmpmTop)
df0A
df0A$nAll <- format(df0A$nAll, big.mark=",", scientific=FALSE)
df0A$nTop <- format(df0A$nTop, big.mark=",", scientific=FALSE)
df0A$pctAll <- sprintf("%.1f", df0A$pctAll)
df0A$pctTop <- sprintf("%.1f", df0A$pctTop)
df0A$mmAll <- format(round(df0A$mmAll), big.mark=",", scientific=FALSE)
df0A$mmTop <- format(round(df0A$mmTop), big.mark=",", scientific=FALSE)
df0A$spendAll <- format(df0A$spendAll, big.mark=",", scientific=FALSE)
df0A$spendTop <- format(df0A$spendTop, big.mark=",", scientific=FALSE)
df0A$pmpmAll <- sprintf("%.2f", df0A$pmpmAll)
df0A$pmpmTop <- sprintf("%.2f", df0A$pmpmTop)
df0ACohort <- cbind(aggCohortAll, subset(aggCohortTop, select=-c(cohort)))
df0ATotal  <- cbind(aggTotalAll,  subset(aggTotalTop , select=-c(cohort)))
df0A <- rbind(df0ACohort, df0ATotal)
df0A$nAll <- format(df0A$nAll, big.mark=",", scientific=FALSE)
df0A$nTop <- format(df0A$nTop, big.mark=",", scientific=FALSE)
df0A$pctAll <- sprintf("%.1f", df0A$pctAll)
df0A$pctTop <- sprintf("%.1f", df0A$pctTop)
df0A$mmAll <- format(round(df0A$mmAll), big.mark=",", scientific=FALSE)
df0A$mmTop <- format(round(df0A$mmTop), big.mark=",", scientific=FALSE)
df0A$spendAll <- format(df0A$spendAll, big.mark=",", scientific=FALSE)
df0A$spendTop <- format(df0A$spendTop, big.mark=",", scientific=FALSE)
df0A$pmpmAll <- sprintf("%.2f", df0A$pmpmAll)
df0A$pmpmTop <- sprintf("%.2f", df0A$pmpmTop)
df0A
dtRecip
f
rxGetInfo(f, getVarInfo=TRUE)
?write.table
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(connection)
close(connection)
head(htmlCode)
nchar(htmlCode[10])
c(nchar(htmlCode[10]), nchar(htmlCode[20], nchar(htmlCode[30], nchar(htmlCode[100]))
)
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
htmlCode <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
require(httr)
htmlCode <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
content <- content(htmlCode, as="text")
htmlParsed <- htmlParse(content, asText=TRUE)
require(XML)
htmlParsed <- htmlParse(content, asText=TRUE)
htmlParsed
htmlParsed[10]
xpathSApply(htmlParsed, "//title"", xmlValue)
)
xpathSApply(htmlParsed, "//title", xmlValue)
?read.fwf
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
d <- read.fwf(url)
lines <- readLines(url)
?readLines
lines <- readLines(url, n=10)
lines
length(lines[5])
nchar(lines[5])
max(nchar(lines))
min(nchar(lines))
colNames <- c("week", "sstNino12", "sstaNino12", "sstNino3", "sstaNino3", "sstNino34", "sstaNino34", "sstNino4", "sstaNino4")
w <- c(9, 4, 3, 4, 3, 4, 3, 4, 3)
d <- read.fwf(url, w, header=FALSE, sep=" -", skip=4, col.names=colNames)
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
head(d)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
head(d)
d[, grep("^filler", names(d))] <- NULL
grep("^filler", names(d))
head(d[, grep("^filler", names(d))])
d[, grep("^filler", names(d))] <- NULL
d <- d[, grep("^[^filler]", names(d))]
head(d)
sum(d[, 4])
connection <- url("http://mac50k.org/course/50kdesc_2014.htm")
htmlCode <- readLines(connection)
close(connection)
htmlCode
require(httr)
require(XML)
htmlCode <- GET("http://mac50k.org/course/50kdesc_2014.htm")
content <- content(htmlCode, as="text")
htmlParsed <- htmlParse(content, asText=TRUE)
htmlParsed
url <- "http://mac50k.org/course/50kdesc_2014.htm"
doc <- xmlInternalTreeParse(url)
require(XML)
url <- "http://mac50k.org/course/50kdesc_2014.htm"
t <- readHTMLTable(url)
t
tables <- readHTMLTable(url)
nRows <- unlist(lapply(tables, function(t) dim(t)[1]))
nRows
d <- tables[[which.max(nRows)]]
d
head(d)
tail(d)
names <- d[4, ]
d <- d[5:124, ]
names
head(d)
tail(d)
?which
grep("^START", d[, 4])
require(XML)
url <- "http://mac50k.org/course/50kdesc_2014.htm"
tables <- readHTMLTable(url)
nRows <- unlist(lapply(tables, function(t) dim(t)[1]))
d <- tables[[which.max(nRows)]]
head(d)
tail(d)
names <- d[4, ]
names(d) <- d[4, ]
head(d)
require(XML)
url <- "http://mac50k.org/course/50kdesc_2014.htm"
tables <- readHTMLTable(url)
nRows <- unlist(lapply(tables, function(t) dim(t)[1]))
d <- tables[[which.max(nRows)]]
head(d)
tail(d)
head(d)
require(XML)
url <- "http://mac50k.org/course/50kdesc_2014.htm"
tables <- readHTMLTable(url)
head(tables[[1]])
head(tables[[2]])
d <- tables[[2]]
head(d)
tail(d)
names(d) <- d[4, ]
head(d)
d <- tables[[2]]
head(d)
names(d) <- d[2, ]
head(d)
d <- tables[[2]]
head(d)
ncols(d)
ncol(d)
lineStart <- grep("^START", d[, 4])
lineStart
lineFinish <- grep("^FINISH", d[, 4])
d <- d[lineStart:lineFinish, ]
head(d)
d <- tables[[2]]
d[2, ]
?readHTMLTable
tables <- readHTMLTable(url, header=FALSE)
d <- tables[[2]]
head(d)
names(d) <- d[2, ]
head(d)
tables <- readHTMLTable(url)
d <- tables[[2]]
names(d) <- d[3, ]
head(d)
d[3, ]
d[2, ]
names <- d[2, ]
names
names(d) <- names
head(d)
names(d)
?names
names
is.character(names)
names <- as.character(d[2, ])
names(d)
as.character(d[2, ])
d[2, ]
length(names)
names[1]
names <- d[2, ]
names[1]
names(d) <- NULL
names(d)
head(d)
names(d) <- names
head(d)
names
d <- tables[[2]]
head(d)
names <- c("mile", "mi2nxt", "elevation", "directions", "filler1", "filler2")
lineStart <- grep("^START", d[, 4])
lineFinish <- grep("^FINISH", d[, 4])
d <- d[lineStart:lineFinish, ]
head(d)
names(d) <- c("mile", "mi2nxt", "elevation", "directions", "filler1", "filler2")
head(d)
names(d) <- c("mile", "mi2nxt", "elevation", "directions", "mi2aid", "filler2")
lineStart <- grep("^START", d[, 4])
lineFinish <- grep("^FINISH", d[, 4])
d <- d[lineStart:lineFinish, ]
head(d)
tail(d)
d$isAid <- grepl("Aid Station", d$directions)
table(d$isAid)
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line()
View(d)
str(d)
d$mile <- as.numeric(d$mile)
d$mi2nxt <- as.numeric(d$mi2nxt)
d$elevation <- as.numeric(d$elevation)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line()
View(d)
require(XML)
url <- "http://mac50k.org/course/50kdesc_2014.htm"
tables <- readHTMLTable(url, header=FALSE)
d <- tables[[2]]
head(d)
tail(d)
names(d) <- c("mile", "mi2nxt", "elevation", "directions", "mi2aid", "filler2")
lineStart <- grep("^START", d[, 4])
lineFinish <- grep("^FINISH", d[, 4])
d <- d[lineStart:lineFinish, ]
head(d)
tail(d)
mile <- unclass(d$mile)
head(data.frame(mile, d$mile))
mile <- as.numeric(d$mile)
head(data.frame(mile, d$mile))
classes <- c(rep("numeric", 3))
tables <- readHTMLTable(url, header=FALSE, colClasses=classes, which=2)
head(d)
d <- readHTMLTable(url, header=FALSE, colClasses=classes, which=2)
head(d)
classes <- c(rep("numeric", 3), rep("character", 3))
d <- readHTMLTable(url, header=FALSE, colClasses=classes, which=2)
head(d)
tail(d)
names(d) <- c("mile", "mi2nxt", "elevation", "directions", "mi2aid", "filler2")
lineStart <- grep("^START", d[, 4])
lineFinish <- grep("^FINISH", d[, 4])
d <- d[lineStart:lineFinish, ]
head(d)
tail(d)
d$isAid <- grepl("Aid Station", d$directions)
table(d$isAid)
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line()
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_smooth()
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation, color=isAid)) +
geom_line() +
geom_point()
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point(color=d$isAid)
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point()
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point(aes(color=isAid))
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point(aes(size=isAid))
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point(aes(size=isAid)) +
theme(legend.position="none")
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point(aes(size=isAid)) +
labs(title="McDonald Forest 50K elevation chart")
theme(legend.position="none")
require(ggplot2)
ggplot(d, aes(x=mile, y=elevation)) +
geom_line() +
geom_point(aes(size=isAid)) +
labs(title="McDonald Forest 50K elevation chart") +
theme(legend.position="none")
path <- file.path("E:", "EX12-03_C-TraIn", "Analytic")
f <- file.path(path, "Analysis.csv")
ds <- read.table(f, sep=",", na.strings="", header=TRUE)
names(ds)
path <- file.path("E:", "EX12-03_C-TraIn", "Analytic")
f <- file.path(path, "Analysis.csv")
ds <- read.table(f, sep=",", na.strings="", header=TRUE)
?read.table
ds <- read.table(f, sep=",", na.strings="", header=TRUE, fill=TRUE)
names(ds)
ds$first_appt_afterdischrg <- as.character(ds$first_appt_afterdischrg)
ds$first_appt_afterdischrg
ds <- read.table(f, sep=",", na.strings="", header=TRUE, quote="")
ds <- read.table(f, sep=",", na.strings="", header=TRUE, quote="", fill=TRUE)
ds$first_appt_afterdischrg <- as.character(ds$first_appt_afterdischrg)
ds$first_appt_afterdischrg
table(ds$first_appt_afterdischrg)
table(ds$first_appt_afterdischrg)
levels$ds$randomization
levels(ds$randomization)
path <- file.path("E:", "EX12-03_C-TraIn", "Analytic")
f <- file.path(path, "Analysis.csv")
ds <- read.table(f, sep=",", na.strings="", header=TRUE, quote="", fill=TRUE)
levels(ds$first_appt_afterdischrg)
ds$first_appt_afterdischrg <- as.character(ds$first_appt_afterdischrg)
possibilities <- c("1", "1 week", "1 WEEK", "1 WK", "2", "2 days", "3", "3 days", "3 DAYS", "4", "4 days", "4 DAYS", "5", "5-7", "5 DAYS", "6", "7", "7 days", "7 DAYS", "A FEW", "next day or week after")
ds$isSawPCPWithin7Days <- ds$first_appt_afterdischrg %in% possibilities
table(ds$first_appt_afterdischrg, ds$isSawPCPWithin7Days)
table(ds$first_appt_afterdischrg[ds$isSawPCPWithin7Days, ])
table(ds$first_appt_afterdischrg[ds$isSawPCPWithin7Days])
table(ds$first_appt_afterdischrg[!ds$isSawPCPWithin7Days])
ds$first_appt_afterdischrg <- as.character(ds$first_appt_afterdischrg)
possibilities <- c("1", "1 week", "1 WEEK", "1 WK", "2", "2 days", "3", "3 days", "3 DAYS", "4", "4 days", "4 DAYS", "5", "5-7", "5 DAYS", "6", "7", "7 days", "7 DAYS", "A FEW", "next day or week after")
ds$isSawPCPWithin7Days <- ds$first_appt_afterdischrg %in% possibilities
table(ds$first_appt_afterdischrg[ds$isSawPCPWithin7Days])
table(ds$first_appt_afterdischrg[!ds$isSawPCPWithin7Days])
table(ds$first_appt_afterdischrg[ds$isSawPCPWithin7Days])
table(ds$first_appt_afterdischrg[!ds$isSawPCPWithin7Days])
table(ds$isSawPCPWithin7Days[ds$intervention])
table(ds$isSawPCPWithin7Days[ds$intervention == 1])
table(ds$intervention)
names(ds)
table(ds$isSawPCPWithin7Days[ds$Intervention == 1])
table(ds$isSawPCPWithin7Days[ds$randomization == "Intervention"])
table(ds$isSawPCPWithin7Days, ds$randomization)
t <- table(ds$isSawPCPWithin7Days, ds$randomization)
t
prop.table(t, margin=2)
addmargins(t)
addmargins(prop.table(t, margin=2))
t <- sprintf("%.1f%%, (%.d)", prop.table(t, margin=2) * 100, t)
t
t <- matrix(t, dim=c(2, 2))
?matrix
t <- matrix(t, nrow=2, ncol=2)
t
?data.frame
t <- table(ds$isSawPCPWithin7Days, ds$randomization)
t <- sprintf("%.1f%%, (%.d)", prop.table(t, margin=2) * 100, t)
t <- matrix(t, nrow=2, ncol=2)
t <- data.frame(t, row.names=c("Did not see PCP within 7 days", "Saw PCP within 7 days"))
names(t) <- levels(ds$randomization)
t
t <- table(ds$isSawPCPWithin7Days, ds$randomization)
t
names(ds)
makeTable <- function (x, labels) {
t <- table(x, ds$randomization)
t <- sprintf("%.1f%% (%.d)", prop.table(t, margin=2) * 100, t)
t <- matrix(t, nrow=2, ncol=2)
t <- data.frame(t, row.names=labels)
names(t) <- levels(ds$randomization)
t
}
makeTable(ds$isSawPCPWithin7Days, c("No", "Saw PCP within 7 days"))
makeTable(ds$RxConsult, c("No", "EPIC PTA (Prior to Admission) med list and chart reviewed"))
makeTable(ds$HomeVisit, c("No", "Home visit, post-discharge?"))
makeTable(ds$PhoneCall, c("No", "Number of phone calls (0, 1, 2+)"))
table(ds$PhoneCall)
makeTable(ds$PhoneCall > 0, c("No", "Number of phone calls (0, 1, 2+)"))
makeTable(ds$isSawPCPWithin7Days, c("No", "Saw PCP within 7 days"))
makeTable(ds$RxConsult, c("No", "EPIC PTA (Prior to Admission) med list and chart reviewed"))
makeTable(ds$HomeVisit, c("No", "Home visit, post-discharge"))
makeTable(ds$PhoneCall > 0, c("No", "Number of phone calls > 0"))
?as.Date
dateCutoff <- as.Date("2013-12-31", format="%Y-%m-%d")
format(dateCutoff, "%m-%d-%Y")
as.numeric(dateCutoff)
?nrows
?nrow
?round
?file.info
?message
require(xlsx)
url <- "http://www.ohsu.edu/xd/outreach/oregon-rural-health/data/rural-definitions/upload/OR-Zip-Codes-Urban-Rural-Designations.xlsx"
dfUrbanRural <- read.xlsx(url)
dfUrbanRural <- read.xlsx(url, sheet=1)
?read.xlsx
dfUrbanRural <- read.xlsx(url, 1)
getwd()
url <- "http://www.ohsu.edu/xd/outreach/oregon-rural-health/data/rural-definitions/upload/OR-Zip-Codes-Urban-Rural-Designations.xlsx"
f <- file.path(getwd(), "OR-Zip-Codes-Urban-Rural-Designations.xlsx")
download.file(url, f, mode="wb")
dfUrbanRural <- read.xlsx(url, 1)
dfUrbanRural <- read.xlsx(f, 1)
packages <- c("data.table")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
setInternet2(TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
names(dt)
?strsplit
varNamesSplit <- strsplit(varNames, "wgtp")
varNames <- names(dt)
varNamesSplit <- strsplit(varNames, "wgtp")
varNamesSplit[123]
varNamesSplit <- strsplit(varNames, "wgtp", fixed=TRUE)
varNamesSplit[123]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
varNames <- names(dt)
varNamesSplit <- strsplit(varNames, "wgtp")
varNamesSplit[123]
varNamesSplit[[123]]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
setwd("~/Repositories/Coursera/GettingAndCleaningData/Quiz4")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip=4, nrows=215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
gdp <- as.numeric(gsub(",", "", dtGDP$gdp))
mean(gdp, na.rm=TRUE)
?as.numeric
dtGDP$gdp
dtGDP <- data.table(read.csv(f, skip=4, nrows=215, stringsAsFactors=FALSE))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
gdp <- as.numeric(gsub(",", "", dtGDP$gdp))
mean(gdp, na.rm=TRUE)
isUnited <- grepl("^United", dtGDP$Long.Name)
summary(isUnited)
dtGDP$Long.Name
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all=TRUE, by=c("CountryCode"))
install.packages("quantmod")
packages <- c("data.table", "quantmod")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
amzn <- getSymbols("AMZN",auto.assign=FALSE)
sampleTimes <- index(amzn)
names(sampleTimes)
head(amzn)
head(sampleTimes)
is.Date(sampleTimes)
isYear2012 <- year(sampleTimes)
table(isYear2012)
table(weekdays(sampleTimes))
table(weekdays(sampleTimes), year(sampleTimes))
table(year(sampleTimes), weekdays(sampleTimes))
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
names(dt)
head(dt)
View(dt)
isFiscalYear <- grep("fiscal year", tolower(dt))
table(isFiscalYear)
head(isFiscalYear)
isFiscalYear <- grep("fiscal year", tolower(dt$Special.Notes))
table(isFiscalYear)
isFiscalYear <- grep("fiscal year end jun", tolower(dt$Special.Notes))
table(isFiscalYear)
isFiscalYearEndJune <- grepl("fiscal year end jun", tolower(dt$Special.Notes))
table(isFiscalYearEndJune)
isFiscalYearEndJune <- grepl("fiscal year end&jun", tolower(dt$Special.Notes))
table(isFiscalYearEndJune)
isFiscalYearEndJune <- grepl("fiscal year end", tolower(dt$Special.Notes))
table(isFiscalYearEndJune)
isFiscalYearEndJune <- grepl("fiscal year end j", tolower(dt$Special.Notes))
table(isFiscalYearEndJune)
isFiscalYearEnd <- grepl("fiscal year end", tolower(dt$Special.Notes))
dt[isFiscalYearEnd, Special.Notes]
isFiscalYearEnd <- grepl("fiscal year end: jun", tolower(dt$Special.Notes))
dt[isFiscalYearEnd, Special.Notes]
isFiscalYearEndJune <- grepl("fiscal year end: jun", tolower(dt$Special.Notes))
table(isFiscalYearEndJune)
dt[isFiscalYearEndJune, Special.Notes]
isFiscalYearEndJune <- grepl("(fiscal year end)&june", tolower(dt$Special.Notes))
table(isFiscalYearEndJune)
isFiscalYearEndJune <- grepl("fiscal year end", tolower(dt$Special.Notes)) & grepl("june", tolower(dt$Special.Notes))
table(isFiscalYearEndJune)
dt[isFiscalYearEndJune, Special.Notes]
isJune <- grepl("june", tolower(dt$Special.Notes))
table(isFiscalYearEnd, isJune)
dt[isFiscalYearEnd & isJune, Special.Notes]
dt[isJune, Special.Notes]
